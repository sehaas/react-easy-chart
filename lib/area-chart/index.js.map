{"version":3,"sources":["../../modules/area-chart/index.js"],"names":["dateParser","AreaChart","data","PropTypes","array","isRequired","width","number","height","xType","string","yType","datePattern","interpolate","style","object","margin","axes","bool","grid","verticalGrid","xDomainRange","yDomainRange","areaColors","noAreaGradient","tickTimeDisplayFormat","yTicks","xTicks","dataPoints","axisLabels","shape","x","y","yAxisOrientRight","mouseOverHandler","func","mouseOutHandler","mouseMoveHandler","clickHandler","props","uid","ref","refs","areaChart","m","w","h","node","ReactFauxDOM","Element","setAttribute","left","right","top","bottom","append","attr","root","label","axis","tickFormat","tickSize","tickPadding","ticks","group","call","text","colors","forEach","color","i","gradient","defaultStyles","fill","xValue","yValue","getFill","d","getStroke","areaPath","curve","y0","y1","linePath","selectAll","enter","calculateDate","v","parseDate","calculateCX","calculateCY","mouseover","lastEvent","mouseout","mousemove","click","item","datum","on","scope","axisStyles","rules","datePatternParser","concat","defaultColors","createSvgNode","createSvgRoot","hasFill","p","calculateChartParameters","createXAxis","createYAxis","createFill","createAreaPathChart","createPoints","className","createStyle","toReact","PureComponent"],"mappings":"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","file":"index.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport ReactFauxDOM from 'react-faux-dom';\nimport {\n  createUniqueID,\n  reduce,\n  createValueGenerator,\n  calculateMargin,\n  createDomainRangeGenerator,\n  defaultColors,\n  defaultStyles,\n  getAxisStyles,\n  createCircularTicks\n} from '../shared';\nimport {\n  event as lastEvent,\n  select,\n  axisBottom,\n  axisLeft,\n  axisRight,\n  line,\n  area,\n  timeFormat } from 'd3';\nimport interpolateLine from '../interpolate';\nimport PropTypes from 'prop-types';\nimport { Style } from 'radium';\nimport merge from 'lodash.merge';\nimport { timeParse as parse } from 'd3-time-format';\n\nconst dateParser = {};\n\nexport default class AreaChart extends PureComponent {\n  static get propTypes() {\n    return {\n      data: PropTypes.array.isRequired,\n      width: PropTypes.number,\n      height: PropTypes.number,\n      xType: PropTypes.string,\n      yType: PropTypes.string,\n      datePattern: PropTypes.string,\n      interpolate: PropTypes.string,\n      style: PropTypes.object,\n      margin: PropTypes.object,\n      axes: PropTypes.bool,\n      grid: PropTypes.bool,\n      verticalGrid: PropTypes.bool,\n      xDomainRange: PropTypes.array,\n      yDomainRange: PropTypes.array,\n      areaColors: PropTypes.array,\n      noAreaGradient: PropTypes.bool,\n      tickTimeDisplayFormat: PropTypes.string,\n      yTicks: PropTypes.number,\n      xTicks: PropTypes.number,\n      dataPoints: PropTypes.bool,\n      axisLabels: PropTypes.shape({\n        x: PropTypes.string,\n        y: PropTypes.string\n      }),\n      yAxisOrientRight: PropTypes.bool,\n      mouseOverHandler: PropTypes.func,\n      mouseOutHandler: PropTypes.func,\n      mouseMoveHandler: PropTypes.func,\n      clickHandler: PropTypes.func\n    };\n  }\n\n  static get defaultProps() {\n    return {\n      width: 200,\n      height: 150,\n      datePattern: '%d-%b-%y',\n      interpolate: 'linear',\n      axes: false,\n      areaColors: [],\n      xType: 'linear',\n      yType: 'linear',\n      axisLabels: {\n        x: '',\n        y: ''\n      },\n      mouseOverHandler: () => {},\n      mouseOutHandler: () => {},\n      mouseMoveHandler: () => {},\n      clickHandler: () => {}\n    };\n  }\n\n  constructor(props) {\n    super(props);\n    this.uid = createUniqueID(props);\n  }\n\n  componentDidMount() {\n    const ref = this.refs.areaChart;\n    createCircularTicks(ref);\n  }\n\n  componentDidUpdate() {\n    const ref = this.refs.areaChart;\n    createCircularTicks(ref);\n  }\n\n  createSvgNode({ m, w, h }) {\n    const node = new ReactFauxDOM.Element('svg');\n    node.setAttribute('width', w + m.left + m.right);\n    node.setAttribute('height', h + m.top + m.bottom);\n    return node;\n  }\n\n  createSvgRoot({ node, m }) {\n    return select(node)\n      .append('g')\n      .attr('transform', `translate(${m.left}, ${m.top})`);\n  }\n\n  createXAxis({ root, m, w, h, x }) {\n    const {\n      xType,\n      axisLabels: { x: label },\n      xTicks,\n      grid,\n      verticalGrid,\n      tickTimeDisplayFormat,\n      yAxisOrientRight\n    } = this.props;\n\n    const axis = axisBottom(x);\n\n    if (xType === 'time' && tickTimeDisplayFormat) {\n      axis\n        .tickFormat(timeFormat(tickTimeDisplayFormat));\n    }\n    if (grid && verticalGrid) {\n      axis\n        .tickSize(-h, 6)\n        .tickPadding(15);\n    } else {\n      axis\n        .tickSize(0)\n        .tickPadding(15);\n    }\n\n    if (xTicks) {\n      axis\n        .ticks(xTicks);\n    }\n\n    const group = root\n      .append('g')\n      .attr('class', 'x axis')\n      .attr('transform', `translate(0, ${h})`);\n\n    group\n      .call(axis);\n\n    if (label) {\n      group\n        .append('text')\n        .attr('class', 'label')\n        .attr('x',\n          (yAxisOrientRight)\n            ? 0\n            : w)\n        .attr('y', m.bottom - 10)\n        .style('text-anchor',\n          (yAxisOrientRight)\n            ? 'start'\n            : 'end')\n        .text(label);\n    }\n    return axis;\n  }\n\n  createYAxis({ root, m, w, y }) {\n    const {\n      yType,\n      axisLabels: { y: label },\n      yTicks,\n      grid,\n      tickTimeDisplayFormat,\n      yAxisOrientRight\n    } = this.props;\n\n    const axis = yAxisOrientRight ? axisRight(y) : axisLeft(y);\n\n    if (yType === 'time' && tickTimeDisplayFormat) {\n      axis\n        .tickFormat(timeFormat(tickTimeDisplayFormat));\n    }\n\n    if (grid) {\n      axis\n        .tickSize(-w, 6)\n        .tickPadding(12);\n    } else {\n      axis\n        .tickPadding(10);\n    }\n\n    if (yTicks) {\n      axis\n        .ticks(yTicks);\n    }\n\n    const group = root\n      .append('g')\n      .attr('class', 'y axis')\n      .attr('transform',\n        (yAxisOrientRight)\n          ? `translate(${w}, 0)`\n          : 'translate(0, 0)');\n\n    group\n      .call(axis);\n\n    if (label) {\n      group\n        .append('text')\n        .attr('class', 'label')\n        .attr('transform', 'rotate(-90)')\n        .attr('x', 0)\n        .attr('y',\n          (yAxisOrientRight)\n            ? -20 + m.right\n            : 0 - m.left)\n        .attr('dy', '.9em')\n        .style('text-anchor', 'end')\n        .text(label);\n    }\n\n    return axis;\n  }\n\n  createFill({ node, colors }) {\n    const uid = this.uid;\n\n    colors.forEach((color, i) => {\n      const gradient = select(node)\n        .append('defs')\n        .append('linearGradient')\n        .attr('id', `gradient-${i}-${uid}`)\n        .attr('x1', '0%')\n        .attr('x2', '0%')\n        .attr('y1', '40%')\n        .attr('y2', '100%');\n\n      defaultStyles[`.dot${i}`] = { fill: color };\n\n      gradient\n        .append('stop')\n        .attr('offset', '0%')\n        .attr('style', `stop-color:${color}; stop-opacity:0.6`);\n\n      gradient\n        .append('stop')\n        .attr('offset', '100%')\n        .attr('style', `stop-color:${color}; stop-opacity:0.4`);\n    });\n  }\n\n  createAreaPathChart({ root, h, x, y, xValue, yValue, colors }) {\n    const {\n      data,\n      interpolate,\n      noAreaGradient\n    } = this.props;\n\n    const uid = this.uid;\n\n    const getFill = (d, i) => (\n      (noAreaGradient)\n        ? colors[i]\n        : `url(#gradient-${i}-${uid})`\n    );\n\n    const getStroke = (d, i) => colors[i];\n\n    const areaPath = area()\n      .curve(interpolateLine(interpolate))\n      .x((d) => x(xValue(d)))\n      .y0(h)\n      .y1((d) => y(yValue(d)));\n\n    const linePath = line()\n      .curve(interpolateLine(interpolate))\n      .x((d) => x(xValue(d)))\n      .y((d) => y(yValue(d)));\n\n    const group = root\n      .append('g')\n      .attr('class', 'areaChart');\n\n    group\n      .selectAll('path.area')\n      .data(data)\n      .enter()\n      .append('path')\n      .attr('class', 'area')\n      .style('fill', getFill)\n      .attr('d', areaPath);\n\n    group\n      .selectAll('path.line')\n      .data(data)\n      .enter()\n      .append('path')\n      .attr('class', 'line')\n      .style('stroke', getStroke)\n      .attr('d', linePath);\n  }\n\n  createPoints({ root, x, y, colors }) {\n    const {\n      data,\n      xType,\n      yType,\n      mouseOverHandler,\n      mouseOutHandler,\n      mouseMoveHandler,\n      clickHandler\n    } = this.props;\n\n    /*\n     * We don't really need to do this, but it\n     * avoids obscure \"this\" below\n     */\n    const calculateDate = (v) => this.parseDate(v);\n\n    const getStroke = (d, i) => colors[i];\n\n    /*\n     * Creating the calculation functions\n     */\n    const calculateCX = (d) => (\n      (xType === 'time')\n        ? x(calculateDate(d.x))\n        : x(d.x));\n\n    const calculateCY = (d) => (\n      (yType === 'time')\n        ? y(calculateDate(d.y))\n        : y(d.y));\n\n    const mouseover = (d) => mouseOverHandler(d, lastEvent);\n    const mouseout = (d) => mouseOutHandler(d, lastEvent);\n    const mousemove = (d) => mouseMoveHandler(d, lastEvent);\n    const click = (d) => clickHandler(d, lastEvent);\n\n    const group = root\n      .append('g')\n      .attr('class', 'dataPoints');\n\n    data.forEach((item) => {\n      item.forEach((d) => {\n        /*\n         * Applying the calculation functions\n         */\n        group\n          .datum(d)\n          .append('circle')\n          .attr('class', 'data-point')\n          .style('strokeWidth', '2px')\n          .style('stroke', getStroke)\n          .style('fill', 'white')\n          .attr('cx', calculateCX)\n          .attr('cy', calculateCY)\n          .on('mouseover', mouseover)\n          .on('mouseout', mouseout)\n          .on('mousemove', mousemove)\n          .on('click', click);\n      });\n    });\n  }\n\n  createStyle() {\n    const {\n      style,\n      grid,\n      verticalGrid,\n      yAxisOrientRight,\n    } = this.props;\n\n    const uid = this.uid;\n    const scope = `.area-chart-${uid}`;\n    const axisStyles = getAxisStyles(grid, verticalGrid, yAxisOrientRight);\n    const rules = merge({}, defaultStyles, style, axisStyles);\n\n    return (\n      <Style\n        scopeSelector={scope}\n        rules={rules}\n      />\n    );\n  }\n\n  parseDate(v) {\n    const {\n      datePattern\n    } = this.props;\n\n    const datePatternParser = (\n      dateParser[datePattern] || (\n      dateParser[datePattern] = parse(datePattern)));\n\n    return datePatternParser(v);\n  }\n\n  calculateChartParameters() {\n    const {\n      data,\n      xType,\n      yType,\n      axes,\n      xDomainRange,\n      yDomainRange,\n      yAxisOrientRight,\n      areaColors,\n      margin,\n      width,\n      height\n    } = this.props;\n\n    /*\n     * We could \"bind\"!\n     */\n    const parseDate = (v) => this.parseDate(v);\n\n    /*\n     * 'w' and 'h' are the width and height of the graph canvas\n     * (excluding axes and other furniture)\n     */\n    const m = calculateMargin(axes, margin, yAxisOrientRight);\n    const w = reduce(width, m.left, m.right);\n    const h = reduce(height, m.top, m.bottom);\n\n    const x = createDomainRangeGenerator('x', xDomainRange, data, xType, w, parseDate);\n    const y = createDomainRangeGenerator('y', yDomainRange, data, yType, h, parseDate);\n\n    const xValue = createValueGenerator('x', xType, parseDate);\n    const yValue = createValueGenerator('y', yType, parseDate);\n\n    const colors = areaColors.concat(defaultColors);\n\n    const node = this.createSvgNode({ m, w, h });\n    const root = this.createSvgRoot({ node, m });\n\n    return {\n      m,\n      w,\n      h,\n      x,\n      y,\n      xValue,\n      yValue,\n      colors,\n      node,\n      root\n    };\n  }\n\n  render() {\n    const {\n      axes,\n      dataPoints,\n      noAreaGradient\n    } = this.props;\n\n    const hasFill = !noAreaGradient;\n    const p = this.calculateChartParameters();\n\n    if (axes) {\n      this.createXAxis(p);\n\n      this.createYAxis(p);\n    }\n\n    if (hasFill) {\n      this.createFill(p);\n    }\n\n    this.createAreaPathChart(p);\n\n    if (dataPoints) {\n      this.createPoints(p);\n    }\n\n    const uid = this.uid;\n    const className = `area-chart-${uid}`;\n    const {\n      node\n    } = p;\n\n    return (\n      <div ref=\"areaChart\" className={className}>\n        {this.createStyle()}\n        {node.toReact()}\n      </div>\n    );\n  }\n}\n"]}